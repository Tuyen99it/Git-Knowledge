1. Chuẩn bị tài liệu học tập
C1 → C2 → C3 → beta :  B1  →  B2
             → master:   D1→D2
2. Thực hành gộp nhánh D2 với B2
- Có hai cách gộp nhánh: git merge và git rebase
+ Sao lưu nhánh beta: git branch B
+ Sao lưu nhánh master: git branch M
* Gộp nhánh beta vào master sử dụng " git merge "
+ git merge beta → CONFLICT (content): Merge conflict in LS3-merge-rebase/a.txt
→ sử lý sung đột: 
+ Accept current change: chấp nhập sửa đổi ở nhánh master
+ Accept incoming change: chấp nhập sửa đổi ở nhánh beta
+ Accept both changes: chấp nhập sửa đổi ở cả hai nhánh
. Thực hiện đánh chỉ mục lại: git add .
. Thực hiện commit: git commit -m"M"
* Gộp nhánh bằng phương pháp: " git rebase "
+ Sao lưu nhánh master từ nhánh M
. Xoá nhánh master: git branch -D master
. Tạo nhánh master từ nhánh m: git branch master
. Gộp nhánh D3 và B2 bằng rebase: git rebase beta: git rebase beta → sử lý file sung đột → thực hiện đánh chỉ mục lại: git add . → tiếp tục gộp file: git rebase --continue
3. Làm việc remote repository trên server lưu trữ git
- Thực hiện lấy dữ liệu trên server git
- thực hiện đẩy dữ liệu lên server git
. Liệt kê tất cả các kết nối tới máy local: git remote
. Kiểm tra trạng thái của remote: git remote -v
. Kểt nối remote tới một địa chỉ server: git remote add <tên remote > < Địa chỉ url server >
. Remove remote: git remote rm xyz
4. Thực hiện đẩy dữ liệu lên server
. Đẩy dữ liệu lên sever: git push < tên remote> < tên nhánh đẩy lên>
+ VD:  Đẩy dữ liệu từ nhánh master lần đầu lên server ( -u: upstream ): git push -u origin master
. Kiểm tra nhánh nào đã được push lên remote: git branch -a
. Đẩy tất cả các nhánh lên remote: git push origin --all
. Xoá nhánh trên remote: git push --delete origin <tên nhánh>
5. Lấy dữ liệu về local: git clone, git pull
. Tải repo từ xa: git clone < địa chỉ lưu trữ git > → Tự đông lấy về nhánh master
. Lấy các nhán khác trên remote:
. Cập nhật các thông tin thay đổi của remote: git fetch
. Cập nhật những commit mới từ remote do người khác cập nhật về local: git pull < tên remote > < tên nhánh >
. Kiểm tra commit trên remote: git log --oneline origin/master
6. git hub/ git lab
7. Tag trong Git. Đánh dấu phiên bản và đẩy lên git
- Sử dụng tag để đánh dấu các commit đặc biệt, Các commit này có thể là các bản release
. Liệt kê tất cả các tag: git tag
. Tag đầy đủ: git tag -a "tên tag " -m " Thông đệp của tag " <mã hash của commit> : VD: git tag -a "v1.0" -m " phiên ban beta 1" → Thực hiện đặt mã tag cho commit cuối cùng 
. Xem thông tin chi tết của tag: git show <tên tag>: git show v1.0
. Thực hiện xoá một tag: git tag -d <tên tag>
. Tag đóng vai trò như mã hash của commit: VD git checkout v1.0
. Push tag lên remote: git push origin <tên tag>
. Push tất cả các tags lên remote: git push origin --tags
. Xoá tags ở remote: git push --delete origin <tên tag>
8. Chức năng fork và pull request
- Fork dùng để lấy về một repo và cùng phát triển cùng tác giả.
. Lấy repo về: fork icon 
. Thực hiện gửi yêu cầu update tới chủ sở hữu: Pull request → create pull request
. Merge pull request: merge pull request
9. Git tk và git gui
. Quan sát chực quan về lịch sử commit: gitk → chỉ có thể xem được lịch sử của nhánh main
. Check lịch sử của nhánh khác: git switch <tên nhánh> → gitk
. Thực hiện cômmit bằng tool git → git gui
10. Git trong một số IDE
. Cài extension: git history cho vscode
11. SSH key và cấu hình Github, gitlab sử dụng SSH key
- Sử dụng SSH để phát sinh ssh key. Để môi lần push/pull dữ liệu lên git ta không cần nhập mk mà ứng dụng tự động xác thực bằng mã SSH
- Phát sinh ssh private key and public key
. Tạo ra thư mục để lưu trữ ssh key: vd: mkdir gitkey
. Tạo file private key có tên rsa:  ssh-keygen -t rsa -f id_rsa
→ tự động phát sinh cho ta 2 file: file  id_rsa và private key: id_rsa.pub
→ mở file id_rsa.pub lấy private key: cat id_rsa.pub
→ copy private key → paste vào key ở github
. Mở file cấu hình trên máy để thiết lập config: code ~/.ssh/config 
. Thiết lập file cấu hình:
Host github.com
    User git
    Port 22
    PreferredAuthentications publickey
    IdentityFile " C:\Users\Nguyen Tuyen\c#\gitkey\id_rsa" 
. Lấy IdentityFile → terminal: pwd 